version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: autogram_production_django
    depends_on:
      - postgres
    volumes:
      - .:/app
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: autogram_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  instapy:
    build:
      context: .
      dockerfile: ./compose/production/instapy/Dockerfile
    container_name: autogram_production_instapy
    env_file:
      - ./.envs/.production/.instapy
    volumes:
      - ./:/code

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: autogram_production_celeryworker
    depends_on:
      - redis
      - postgres

    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: autogram_production_celerybeat
    depends_on:
      - redis
      - postgres

    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: autogram_production_flower
    ports:
      - "5555:5555"
    command: /start-flower
